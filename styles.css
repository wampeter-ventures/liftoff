/* Reset and base styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --primary-color: 220 100% 50%; /* #0066ff */
    --secondary-color: 280 100% 60%; /* #9933ff */
    --success-color: 120 60% 45%; /* #4CAF50 */
    --danger-color: 0 70% 55%; /* #f44336 */
    --warning-color: 40 100% 50%; /* #ff9900 */
    --background: 220 15% 8%; /* #0f1419 */
    --surface: 220 12% 12%; /* #1a1f2e */
    --text-primary: 220 5% 95%; /* #f0f1f3 */
    --text-secondary: 220 5% 70%; /* #b0b3b8 */
    --border: 220 10% 20%; /* #2a3441 */
    --rocket-gold: 45 100% 60%; /* #ffcc33 */
    --rocket-silver: 210 5% 85%; /* #d1d5db */
}

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background: hsl(var(--background));
    color: hsl(var(--text-primary));
    line-height: 1.6;
    min-height: 100vh;
    overflow-x: hidden;
}

/* App layout */
.app {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
}

.game-header {
    background: linear-gradient(135deg, hsl(var(--primary-color)), hsl(var(--secondary-color)));
    padding: 1rem 2rem;
    text-align: center;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
}

.game-header h1 {
    margin: 0;
    font-size: 2rem;
    font-weight: bold;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.game-header i {
    margin-right: 0.5rem;
    color: hsl(var(--rocket-gold));
}

/* Button styles */
.btn {
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    text-decoration: none;
    background: transparent;
}

.btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

.btn:active {
    transform: translateY(0);
}

.btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
}

.btn-primary {
    background: linear-gradient(135deg, hsl(var(--primary-color)), hsl(var(--secondary-color)));
    color: white;
}

.btn-secondary {
    background: hsl(var(--surface));
    color: hsl(var(--text-primary));
    border: 1px solid hsl(var(--border));
}

.btn-large {
    padding: 1rem 2rem;
    font-size: 1.2rem;
}

/* Game Setup */
.game-setup {
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 2rem;
}

.setup-container {
    max-width: 600px;
    width: 100%;
    background: hsl(var(--surface));
    padding: 2rem;
    border-radius: 16px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
}

.setup-container h2 {
    text-align: center;
    margin-bottom: 2rem;
    color: hsl(var(--primary-color));
}

.setup-section {
    margin-bottom: 2rem;
}

.setup-section label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 600;
    color: hsl(var(--text-secondary));
}

.player-count-select {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid hsl(var(--border));
    border-radius: 8px;
    background: hsl(var(--background));
    color: hsl(var(--text-primary));
    font-size: 1rem;
}

.players-config h3 {
    margin-bottom: 1rem;
    color: hsl(var(--text-primary));
}

.player-config {
    margin-bottom: 1rem;
    padding: 1rem;
    background: hsl(var(--background));
    border-radius: 8px;
    border: 1px solid hsl(var(--border));
}

.player-config-row {
    display: flex;
    gap: 1rem;
    align-items: end;
}

.player-name-group {
    flex: 2;
}

.dice-count-group {
    flex: 1;
}

.player-name-input,
.dice-count-input {
    width: 100%;
    padding: 0.5rem;
    border: 1px solid hsl(var(--border));
    border-radius: 6px;
    background: hsl(var(--surface));
    color: hsl(var(--text-primary));
    font-size: 1rem;
}

.game-rules {
    margin: 2rem 0;
    padding: 1rem;
    background: hsl(var(--background));
    border-radius: 8px;
    border-left: 4px solid hsl(var(--primary-color));
}

.game-rules h3 {
    margin-bottom: 1rem;
    color: hsl(var(--primary-color));
}

.game-rules ul {
    list-style: none;
    padding-left: 0;
}

.game-rules li {
    margin-bottom: 0.5rem;
    padding-left: 1.5rem;
    position: relative;
}

.game-rules li::before {
    content: "â†’";
    position: absolute;
    left: 0;
    color: hsl(var(--primary-color));
    font-weight: bold;
}

/* Game Container */
.game-container {
    flex: 1;
    padding: 1rem;
    max-width: 1400px;
    margin: 0 auto;
    width: 100%;
}

.game-info {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-bottom: 1rem;
    padding: 1rem;
    background: hsl(var(--surface));
    border-radius: 8px;
}

.player-status h3 {
    margin: 0 0 15px 0;
    color: hsl(var(--text-primary));
    text-align: center;
}

.player-list {
    display: flex;
    flex-direction: column;
    gap: 8px;
}

.player-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 8px 12px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    border: 1px solid rgba(255, 255, 255, 0.2);
    transition: all 0.3s ease;
}

.player-item.current-player {
    background: rgba(76, 175, 80, 0.3);
    border-color: #4CAF50;
    box-shadow: 0 0 10px rgba(76, 175, 80, 0.5);
}

.player-item.eliminated {
    opacity: 0.5;
    background: rgba(244, 67, 54, 0.2);
    border-color: #f44336;
}

.player-name {
    font-weight: bold;
    color: hsl(var(--text-primary));
}

.dice-count {
    color: #FFD700;
    font-weight: bold;
}

.turn-indicator {
    color: #4CAF50;
    font-weight: bold;
    font-size: 0.9em;
}

.current-player {
    font-size: 1.2rem;
    color: hsl(var(--text-primary));
}

.game-controls {
    display: flex;
    gap: 1rem;
    justify-content: center;
}

.game-board {
    display: grid;
    grid-template-columns: 300px 1fr;
    gap: 2rem;
    min-height: 600px;
}

.left-panel {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.center-panel {
    display: flex;
    justify-content: center;
    align-items: flex-start;
}

/* Dice Roll Component */
.dice-roll-container {
    background: hsl(var(--surface));
    border-radius: 12px;
    padding: 1rem;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

.dice-roll-container h3 {
    margin-bottom: 1rem;
    color: hsl(var(--primary-color));
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.player-dice-group {
    margin-bottom: 1rem;
}

.player-label {
    font-size: 0.9rem;
    font-weight: 600;
    color: hsl(var(--text-secondary));
    margin-bottom: 0.5rem;
}

.dice-container {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
}

.no-dice {
    text-align: center;
    padding: 2rem;
    color: hsl(var(--success-color));
    font-weight: 600;
}

.dice-instructions {
    margin-top: 1rem;
    font-size: 0.85rem;
    color: hsl(var(--text-secondary));
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
}

/* Die Component */
.die {
    width: 50px;
    height: 50px;
    position: relative;
    cursor: grab;
    transition: all 0.2s ease;
    border-radius: 8px;
    overflow: hidden;
    user-select: none;
}

.die:hover {
    transform: scale(1.05);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
}

.die.dragging {
    opacity: 0.5;
    transform: scale(0.9);
    cursor: grabbing;
}

.die-face {
    width: 100%;
    height: 100%;
    display: block;
}

.die-player-indicator {
    position: absolute;
    bottom: 2px;
    right: 2px;
    width: 12px;
    height: 12px;
    background: hsl(var(--primary-color));
    color: white;
    border-radius: 50%;
    font-size: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
}

.die.player-1 .die-player-indicator { background: hsl(220 100% 50%); }
.die.player-2 .die-player-indicator { background: hsl(0 70% 55%); }
.die.player-3 .die-player-indicator { background: hsl(120 60% 45%); }
.die.player-4 .die-player-indicator { background: hsl(280 100% 60%); }
.die.player-5 .die-player-indicator { background: hsl(40 100% 50%); }
.die.player-6 .die-player-indicator { background: hsl(180 60% 45%); }
.die.player-7 .die-player-indicator { background: hsl(320 70% 55%); }
.die.player-8 .die-player-indicator { background: hsl(60 70% 45%); }

/* Fire Pile Component */
.fire-pile-container {
    background: hsl(var(--surface));
    border-radius: 12px;
    padding: 1rem;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

.fire-pile-container h3 {
    margin-bottom: 1rem;
    color: hsl(var(--danger-color));
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.fire-pile {
    position: relative;
    min-height: 120px;
    background: radial-gradient(circle, rgba(255, 68, 68, 0.1), rgba(255, 68, 68, 0.05));
    border: 2px dashed hsl(var(--danger-color));
    border-radius: 12px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    cursor: pointer;
}

.fire-pile.drag-over {
    border-color: hsl(var(--warning-color));
    background: radial-gradient(circle, rgba(255, 153, 0, 0.2), rgba(255, 153, 0, 0.1));
    transform: scale(1.02);
}

.fire-pile.danger {
    border-color: hsl(var(--danger-color));
    background: radial-gradient(circle, rgba(255, 68, 68, 0.3), rgba(255, 68, 68, 0.1));
    animation: pulse-danger 1s infinite;
}

@keyframes pulse-danger {
    0%, 100% { box-shadow: 0 0 0 0 rgba(255, 68, 68, 0.4); }
    50% { box-shadow: 0 0 0 10px rgba(255, 68, 68, 0); }
}

.fire-visual {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 60px;
    height: 80px;
}

.flame-svg {
    width: 100%;
    height: 100%;
    animation: flicker 0.5s ease-in-out infinite alternate;
}

@keyframes flicker {
    0% { transform: scale(1) rotate(-1deg); }
    100% { transform: scale(1.05) rotate(1deg); }
}

.fire-count {
    z-index: 2;
    font-size: 1.5rem;
    font-weight: bold;
    color: hsl(var(--danger-color));
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
}

.count-max {
    font-size: 1rem;
    opacity: 0.7;
}

.fire-placeholder {
    text-align: center;
    color: hsl(var(--text-secondary));
    font-size: 0.9rem;
}

.danger-warning {
    position: absolute;
    top: 5px;
    right: 5px;
    background: hsl(var(--danger-color));
    color: white;
    padding: 2px 6px;
    border-radius: 4px;
    font-size: 0.7rem;
    font-weight: bold;
    animation: blink 1s infinite;
}

@keyframes blink {
    0%, 50% { opacity: 1; }
    51%, 100% { opacity: 0.5; }
}

.fire-progress {
    margin-top: 1rem;
}

.progress-bar {
    width: 100%;
    height: 8px;
    background: hsl(var(--background));
    border-radius: 4px;
    overflow: hidden;
    margin-bottom: 0.5rem;
}

.progress-fill {
    height: 100%;
    transition: all 0.3s ease;
    border-radius: 4px;
}

.progress-label {
    font-size: 0.85rem;
    color: hsl(var(--text-secondary));
    text-align: center;
}

.fire-instructions {
    margin-top: 1rem;
    font-size: 0.8rem;
    color: hsl(var(--text-secondary));
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
}

/* Rocket Grid Component */
.rocket-grid-container {
    background: hsl(var(--surface));
    border-radius: 16px;
    padding: 2rem;
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
    min-width: 500px;
}

.rocket-grid-container h3 {
    text-align: center;
    margin-bottom: 2rem;
    color: hsl(var(--rocket-gold));
    font-size: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
}

.rocket-grid {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 1rem;
}

.rocket-row {
    display: flex;
    align-items: center;
    gap: 1rem;
}

.row-label {
    width: 80px;
    text-align: right;
    font-weight: 600;
    color: hsl(var(--text-secondary));
    display: flex;
    align-items: center;
    justify-content: flex-end;
    gap: 0.5rem;
}

.booster-row .row-label {
    color: hsl(var(--danger-color));
}

.row-slots {
    display: flex;
    gap: 4px;
}

.grid-slot {
    width: 60px;
    height: 60px;
    border: 2px solid hsl(var(--border));
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: hsl(var(--background));
    transition: all 0.2s ease;
    position: relative;
}

.grid-slot.valid-drop {
    border-color: hsl(var(--success-color));
    background: hsla(var(--success-color), 0.1);
    animation: pulse-valid 1s infinite;
}

@keyframes pulse-valid {
    0%, 100% { box-shadow: 0 0 0 0 hsla(var(--success-color), 0.4); }
    50% { box-shadow: 0 0 0 8px hsla(var(--success-color), 0); }
}

.launch-section {
    margin-top: 1rem;
    text-align: center;
}

.btn-disabled {
    background: rgba(128, 128, 128, 0.5);
    border-color: #666;
    color: #999;
    cursor: not-allowed;
    opacity: 0.6;
}

.btn-disabled:hover {
    background: rgba(128, 128, 128, 0.5);
    border-color: #666;
    transform: none;
}

.grid-slot.drag-over {
    border-color: hsl(var(--primary-color));
    background: hsla(var(--primary-color), 0.2);
    transform: scale(1.05);
}

.grid-slot.occupied {
    border-color: hsl(var(--rocket-gold));
    background: hsla(var(--rocket-gold), 0.1);
}

.empty-slot {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
}

.required-number {
    font-size: 1.2rem;
    font-weight: bold;
    color: hsl(var(--text-secondary));
    opacity: 0.5;
}

.drop-indicator {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: hsl(var(--success-color));
    font-size: 1.5rem;
    animation: bounce 0.5s infinite;
}

@keyframes bounce {
    0%, 100% { transform: translate(-50%, -50%) scale(1); }
    50% { transform: translate(-50%, -50%) scale(1.2); }
}

.placed-die {
    pointer-events: none;
}

.rocket-stats {
    display: flex;
    justify-content: center;
    gap: 2rem;
    margin-top: 1rem;
    padding: 1rem;
    background: hsl(var(--background));
    border-radius: 8px;
}

.rocket-stats .stat {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.9rem;
    color: hsl(var(--text-secondary));
}

/* Game Results */
.game-results {
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 2rem;
}

.results-container {
    max-width: 800px;
    width: 100%;
    background: hsl(var(--surface));
    border-radius: 16px;
    padding: 2rem;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
    text-align: center;
}

.result-header {
    margin-bottom: 2rem;
}

.result-header.victory {
    color: hsl(var(--success-color));
}

.result-header.failure {
    color: hsl(var(--danger-color));
}

.result-icon {
    font-size: 4rem;
    margin-bottom: 1rem;
    display: block;
}

.result-title {
    font-size: 2.5rem;
    font-weight: bold;
    margin-bottom: 1rem;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.result-description {
    font-size: 1.2rem;
    line-height: 1.6;
    color: hsl(var(--text-secondary));
    max-width: 600px;
    margin: 0 auto;
}

.results-stats {
    margin: 2rem 0;
}

.stat-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 1rem;
}

.stat-item {
    background: hsl(var(--background));
    padding: 1rem;
    border-radius: 8px;
    border: 1px solid hsl(var(--border));
}

.stat-value {
    font-size: 2rem;
    font-weight: bold;
    color: hsl(var(--primary-color));
    margin-bottom: 0.25rem;
}

.stat-label {
    font-size: 0.9rem;
    color: hsl(var(--text-secondary));
}

.rocket-summary {
    margin: 2rem 0;
    text-align: left;
}

.rocket-summary h3 {
    text-align: center;
    margin-bottom: 1rem;
    color: hsl(var(--rocket-gold));
}

.summary-grid {
    background: hsl(var(--background));
    padding: 1rem;
    border-radius: 8px;
    border: 1px solid hsl(var(--border));
}

.summary-row {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 0.5rem;
    padding: 0.5rem;
    border-radius: 6px;
}

.summary-row.completed {
    background: hsla(var(--success-color), 0.1);
    border: 1px solid hsla(var(--success-color), 0.3);
}

.summary-row.has-boosters {
    background: hsla(var(--danger-color), 0.1);
    border: 1px solid hsla(var(--danger-color), 0.3);
}

.summary-row .row-label {
    width: 100px;
    font-weight: 600;
    color: hsl(var(--text-secondary));
}

.summary-row .row-slots {
    display: flex;
    gap: 4px;
    flex: 1;
}

.summary-slot {
    width: 30px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 6px;
    font-size: 0.9rem;
    font-weight: bold;
}

.summary-slot.filled {
    background: hsl(var(--rocket-gold));
    color: hsl(var(--background));
}

.summary-slot.empty {
    background: hsl(var(--surface));
    color: hsl(var(--text-secondary));
    border: 1px solid hsl(var(--border));
}

.completion-check {
    color: hsl(var(--success-color));
    font-size: 1.2rem;
}

.achievement-badges {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1rem;
    margin: 2rem 0;
}

.badge {
    background: linear-gradient(135deg, hsl(var(--rocket-gold)), hsl(45 100% 50%));
    color: hsl(var(--background));
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.9rem;
    font-weight: 600;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
}

.results-actions {
    margin-top: 2rem;
}

/* Mobile Responsiveness */
@media (max-width: 768px) {
    .game-header {
        padding: 0.75rem 1rem;
    }
    
    .game-header h1 {
        font-size: 1.5rem;
    }
    
    .game-board {
        grid-template-columns: 1fr;
        gap: 1rem;
    }
    
    .left-panel {
        order: 2;
    }
    
    .center-panel {
        order: 1;
    }
    
    .rocket-grid-container {
        min-width: auto;
        padding: 1rem;
    }
    
    .game-info {
        flex-direction: column;
        gap: 1rem;
        text-align: center;
    }
    
    .game-controls {
        justify-content: center;
    }
    
    .setup-container {
        padding: 1rem;
    }
    
    .player-config-row {
        flex-direction: column;
        gap: 0.5rem;
    }
    
    .results-container {
        padding: 1rem;
    }
    
    .result-title {
        font-size: 2rem;
    }
    
    .stat-grid {
        grid-template-columns: repeat(2, 1fr);
    }
    
    .achievement-badges {
        flex-direction: column;
        align-items: center;
    }
}

@media (max-width: 480px) {
    .dice-container {
        justify-content: center;
    }
    
    .die {
        width: 45px;
        height: 45px;
    }
    
    .grid-slot {
        width: 50px;
        height: 50px;
    }
    
    .rocket-row {
        gap: 0.5rem;
    }
    
    .row-label {
        width: 60px;
        font-size: 0.8rem;
    }
    
    .rocket-stats {
        flex-direction: column;
        gap: 0.5rem;
    }
}

/* Touch device optimizations */
@media (hover: none) and (pointer: coarse) {
    .die:hover {
        transform: none;
    }
    
    .btn:hover {
        transform: none;
    }
    
    .die {
        cursor: pointer;
    }
    
    .grid-slot.valid-drop {
        animation: none;
        box-shadow: 0 0 0 3px hsla(var(--success-color), 0.4);
    }
}

/* Accessibility */
@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
    }
}

/* High contrast mode */
@media (prefers-contrast: high) {
    :root {
        --border: 220 10% 50%;
        --text-secondary: 220 5% 80%;
    }
    
    .grid-slot {
        border-width: 3px;
    }
    
    .die {
        border: 2px solid hsl(var(--text-primary));
    }
}

/* Focus styles for accessibility */
.btn:focus,
.player-count-select:focus,
.player-name-input:focus,
.dice-count-input:focus {
    outline: 2px solid hsl(var(--primary-color));
    outline-offset: 2px;
}

.die:focus {
    outline: 2px solid hsl(var(--primary-color));
    outline-offset: 2px;
    border-radius: 8px;
}

/* Screen reader only content */
.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}
